// 
// Money, https://github.com/danthorpe/Money
// Created by Dan Thorpe, @danthorpe
// 
// The MIT License (MIT)
// 
// Copyright (c) 2015 Daniel Thorpe
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 
// Autogenerated from build scripts, do not manually edit this file.

import XCTest
@testable import Money

// MARK: - Country Types Tests

class AfrikaansSpeakingCountryTests: XCTestCase {

    var country: AfrikaansSpeakingCountry!

    func test__country_identifier_for_Namibia() {
        country = .Namibia
        XCTAssertEqual(country.countryIdentifier, "NA")
    }

    func test__country_identifier_for_SouthAfrica() {
        country = .SouthAfrica
        XCTAssertEqual(country.countryIdentifier, "ZA")
    }
}

class AlbanianSpeakingCountryTests: XCTestCase {

    var country: AlbanianSpeakingCountry!

    func test__country_identifier_for_Macedonia() {
        country = .Macedonia
        XCTAssertEqual(country.countryIdentifier, "MK")
    }

    func test__country_identifier_for_Albania() {
        country = .Albania
        XCTAssertEqual(country.countryIdentifier, "AL")
    }

    func test__country_identifier_for_Kosovo() {
        country = .Kosovo
        XCTAssertEqual(country.countryIdentifier, "XK")
    }
}

class ArabicSpeakingCountryTests: XCTestCase {

    var country: ArabicSpeakingCountry!

    func test__country_identifier_for_Somalia() {
        country = .Somalia
        XCTAssertEqual(country.countryIdentifier, "SO")
    }

    func test__country_identifier_for_Iraq() {
        country = .Iraq
        XCTAssertEqual(country.countryIdentifier, "IQ")
    }

    func test__country_identifier_for_Kuwait() {
        country = .Kuwait
        XCTAssertEqual(country.countryIdentifier, "KW")
    }

    func test__country_identifier_for_Chad() {
        country = .Chad
        XCTAssertEqual(country.countryIdentifier, "TD")
    }

    func test__country_identifier_for_Libya() {
        country = .Libya
        XCTAssertEqual(country.countryIdentifier, "LY")
    }

    func test__country_identifier_for_Egypt() {
        country = .Egypt
        XCTAssertEqual(country.countryIdentifier, "EG")
    }

    func test__country_identifier_for_WesternSahara() {
        country = .WesternSahara
        XCTAssertEqual(country.countryIdentifier, "EH")
    }

    func test__country_identifier_for_SaudiArabia() {
        country = .SaudiArabia
        XCTAssertEqual(country.countryIdentifier, "SA")
    }

    func test__country_identifier_for_Mauritania() {
        country = .Mauritania
        XCTAssertEqual(country.countryIdentifier, "MR")
    }

    func test__country_identifier_for_Djibouti() {
        country = .Djibouti
        XCTAssertEqual(country.countryIdentifier, "DJ")
    }

    func test__country_identifier_for_Eritrea() {
        country = .Eritrea
        XCTAssertEqual(country.countryIdentifier, "ER")
    }

    func test__country_identifier_for_Lebanon() {
        country = .Lebanon
        XCTAssertEqual(country.countryIdentifier, "LB")
    }

    func test__country_identifier_for_Oman() {
        country = .Oman
        XCTAssertEqual(country.countryIdentifier, "OM")
    }

    func test__country_identifier_for_PalestinianTerritories() {
        country = .PalestinianTerritories
        XCTAssertEqual(country.countryIdentifier, "PS")
    }

    func test__country_identifier_for_Sudan() {
        country = .Sudan
        XCTAssertEqual(country.countryIdentifier, "SD")
    }

    func test__country_identifier_for_SouthSudan() {
        country = .SouthSudan
        XCTAssertEqual(country.countryIdentifier, "SS")
    }

    func test__country_identifier_for_Algeria() {
        country = .Algeria
        XCTAssertEqual(country.countryIdentifier, "DZ")
    }

    func test__country_identifier_for_Morocco() {
        country = .Morocco
        XCTAssertEqual(country.countryIdentifier, "MA")
    }

    func test__country_identifier_for_Bahrain() {
        country = .Bahrain
        XCTAssertEqual(country.countryIdentifier, "BH")
    }

    func test__country_identifier_for_UnitedArabEmirates() {
        country = .UnitedArabEmirates
        XCTAssertEqual(country.countryIdentifier, "AE")
    }

    func test__country_identifier_for_Qatar() {
        country = .Qatar
        XCTAssertEqual(country.countryIdentifier, "QA")
    }

    func test__country_identifier_for_Comoros() {
        country = .Comoros
        XCTAssertEqual(country.countryIdentifier, "KM")
    }

    func test__country_identifier_for_Syria() {
        country = .Syria
        XCTAssertEqual(country.countryIdentifier, "SY")
    }

    func test__country_identifier_for_Yemen() {
        country = .Yemen
        XCTAssertEqual(country.countryIdentifier, "YE")
    }

    func test__country_identifier_for_Jordan() {
        country = .Jordan
        XCTAssertEqual(country.countryIdentifier, "JO")
    }

    func test__country_identifier_for_Tunisia() {
        country = .Tunisia
        XCTAssertEqual(country.countryIdentifier, "TN")
    }

    func test__country_identifier_for_Israel() {
        country = .Israel
        XCTAssertEqual(country.countryIdentifier, "IL")
    }

    func test__country_identifier_for_World() {
        country = .World
        XCTAssertEqual(country.countryIdentifier, "001")
    }
}

class BengaliSpeakingCountryTests: XCTestCase {

    var country: BengaliSpeakingCountry!

    func test__country_identifier_for_Bangladesh() {
        country = .Bangladesh
        XCTAssertEqual(country.countryIdentifier, "BD")
    }

    func test__country_identifier_for_India() {
        country = .India
        XCTAssertEqual(country.countryIdentifier, "IN")
    }
}

class CatalanSpeakingCountryTests: XCTestCase {

    var country: CatalanSpeakingCountry!

    func test__country_identifier_for_Italy() {
        country = .Italy
        XCTAssertEqual(country.countryIdentifier, "IT")
    }

    func test__country_identifier_for_France() {
        country = .France
        XCTAssertEqual(country.countryIdentifier, "FR")
    }

    func test__country_identifier_for_Spain() {
        country = .Spain
        XCTAssertEqual(country.countryIdentifier, "ES")
    }

    func test__country_identifier_for_Andorra() {
        country = .Andorra
        XCTAssertEqual(country.countryIdentifier, "AD")
    }
}

class CentralKurdishSpeakingCountryTests: XCTestCase {

    var country: CentralKurdishSpeakingCountry!

    func test__country_identifier_for_Iraq() {
        country = .Iraq
        XCTAssertEqual(country.countryIdentifier, "IQ")
    }

    func test__country_identifier_for_Iran() {
        country = .Iran
        XCTAssertEqual(country.countryIdentifier, "IR")
    }
}

class ChineseSpeakingCountryTests: XCTestCase {

    var country: ChineseSpeakingCountry!

    func test__country_identifier_for_Taiwan() {
        country = .Taiwan
        XCTAssertEqual(country.countryIdentifier, "TW")
    }

    func test__country_identifier_for_HongKongSarChina() {
        country = .HongKongSarChina
        XCTAssertEqual(country.countryIdentifier, "HK")
    }

    func test__country_identifier_for_MacauSarChina() {
        country = .MacauSarChina
        XCTAssertEqual(country.countryIdentifier, "MO")
    }

    func test__country_identifier_for_Singapore() {
        country = .Singapore
        XCTAssertEqual(country.countryIdentifier, "SG")
    }

    func test__country_identifier_for_China() {
        country = .China
        XCTAssertEqual(country.countryIdentifier, "CN")
    }
}

class CroatianSpeakingCountryTests: XCTestCase {

    var country: CroatianSpeakingCountry!

    func test__country_identifier_for_Croatia() {
        country = .Croatia
        XCTAssertEqual(country.countryIdentifier, "HR")
    }

    func test__country_identifier_for_BosniaHerzegovina() {
        country = .BosniaHerzegovina
        XCTAssertEqual(country.countryIdentifier, "BA")
    }
}

class DanishSpeakingCountryTests: XCTestCase {

    var country: DanishSpeakingCountry!

    func test__country_identifier_for_Denmark() {
        country = .Denmark
        XCTAssertEqual(country.countryIdentifier, "DK")
    }

    func test__country_identifier_for_Greenland() {
        country = .Greenland
        XCTAssertEqual(country.countryIdentifier, "GL")
    }
}

class DutchSpeakingCountryTests: XCTestCase {

    var country: DutchSpeakingCountry!

    func test__country_identifier_for_Belgium() {
        country = .Belgium
        XCTAssertEqual(country.countryIdentifier, "BE")
    }

    func test__country_identifier_for_Curaçao() {
        country = .Curaçao
        XCTAssertEqual(country.countryIdentifier, "CW")
    }

    func test__country_identifier_for_Suriname() {
        country = .Suriname
        XCTAssertEqual(country.countryIdentifier, "SR")
    }

    func test__country_identifier_for_Netherlands() {
        country = .Netherlands
        XCTAssertEqual(country.countryIdentifier, "NL")
    }

    func test__country_identifier_for_SintMaarten() {
        country = .SintMaarten
        XCTAssertEqual(country.countryIdentifier, "SX")
    }

    func test__country_identifier_for_CaribbeanNetherlands() {
        country = .CaribbeanNetherlands
        XCTAssertEqual(country.countryIdentifier, "BQ")
    }

    func test__country_identifier_for_Aruba() {
        country = .Aruba
        XCTAssertEqual(country.countryIdentifier, "AW")
    }
}

class EnglishSpeakingCountryTests: XCTestCase {

    var country: EnglishSpeakingCountry!

    func test__country_identifier_for_Singapore() {
        country = .Singapore
        XCTAssertEqual(country.countryIdentifier, "SG")
    }

    func test__country_identifier_for_Netherlands() {
        country = .Netherlands
        XCTAssertEqual(country.countryIdentifier, "NL")
    }

    func test__country_identifier_for_Malaysia() {
        country = .Malaysia
        XCTAssertEqual(country.countryIdentifier, "MY")
    }

    func test__country_identifier_for_PapuaNewGuinea() {
        country = .PapuaNewGuinea
        XCTAssertEqual(country.countryIdentifier, "PG")
    }

    func test__country_identifier_for_Barbados() {
        country = .Barbados
        XCTAssertEqual(country.countryIdentifier, "BB")
    }

    func test__country_identifier_for_HongKongSarChina() {
        country = .HongKongSarChina
        XCTAssertEqual(country.countryIdentifier, "HK")
    }

    func test__country_identifier_for_Eritrea() {
        country = .Eritrea
        XCTAssertEqual(country.countryIdentifier, "ER")
    }

    func test__country_identifier_for_IsleOfMan() {
        country = .IsleOfMan
        XCTAssertEqual(country.countryIdentifier, "IM")
    }

    func test__country_identifier_for_Lesotho() {
        country = .Lesotho
        XCTAssertEqual(country.countryIdentifier, "LS")
    }

    func test__country_identifier_for_Palau() {
        country = .Palau
        XCTAssertEqual(country.countryIdentifier, "PW")
    }

    func test__country_identifier_for_SintMaarten() {
        country = .SintMaarten
        XCTAssertEqual(country.countryIdentifier, "SX")
    }

    func test__country_identifier_for_Belgium() {
        country = .Belgium
        XCTAssertEqual(country.countryIdentifier, "BE")
    }

    func test__country_identifier_for_BosniaHerzegovina() {
        country = .BosniaHerzegovina
        XCTAssertEqual(country.countryIdentifier, "BA")
    }

    func test__country_identifier_for_Cameroon() {
        country = .Cameroon
        XCTAssertEqual(country.countryIdentifier, "CM")
    }

    func test__country_identifier_for_Gibraltar() {
        country = .Gibraltar
        XCTAssertEqual(country.countryIdentifier, "GI")
    }

    func test__country_identifier_for_Montenegro() {
        country = .Montenegro
        XCTAssertEqual(country.countryIdentifier, "ME")
    }

    func test__country_identifier_for_Madagascar() {
        country = .Madagascar
        XCTAssertEqual(country.countryIdentifier, "MG")
    }

    func test__country_identifier_for_CzechRepublic() {
        country = .CzechRepublic
        XCTAssertEqual(country.countryIdentifier, "CZ")
    }

    func test__country_identifier_for_MarshallIslands() {
        country = .MarshallIslands
        XCTAssertEqual(country.countryIdentifier, "MH")
    }

    func test__country_identifier_for_Swaziland() {
        country = .Swaziland
        XCTAssertEqual(country.countryIdentifier, "SZ")
    }

    func test__country_identifier_for_Austria() {
        country = .Austria
        XCTAssertEqual(country.countryIdentifier, "AT")
    }

    func test__country_identifier_for_Romania() {
        country = .Romania
        XCTAssertEqual(country.countryIdentifier, "RO")
    }

    func test__country_identifier_for_Malawi() {
        country = .Malawi
        XCTAssertEqual(country.countryIdentifier, "MW")
    }

    func test__country_identifier_for_Jersey() {
        country = .Jersey
        XCTAssertEqual(country.countryIdentifier, "JE")
    }

    func test__country_identifier_for_Germany() {
        country = .Germany
        XCTAssertEqual(country.countryIdentifier, "DE")
    }

    func test__country_identifier_for_Kiribati() {
        country = .Kiribati
        XCTAssertEqual(country.countryIdentifier, "KI")
    }

    func test__country_identifier_for_Norway() {
        country = .Norway
        XCTAssertEqual(country.countryIdentifier, "NO")
    }

    func test__country_identifier_for_MacauSarChina() {
        country = .MacauSarChina
        XCTAssertEqual(country.countryIdentifier, "MO")
    }

    func test__country_identifier_for_Jamaica() {
        country = .Jamaica
        XCTAssertEqual(country.countryIdentifier, "JM")
    }

    func test__country_identifier_for_ChristmasIsland() {
        country = .ChristmasIsland
        XCTAssertEqual(country.countryIdentifier, "CX")
    }

    func test__country_identifier_for_Montserrat() {
        country = .Montserrat
        XCTAssertEqual(country.countryIdentifier, "MS")
    }

    func test__country_identifier_for_SolomonIslands() {
        country = .SolomonIslands
        XCTAssertEqual(country.countryIdentifier, "SB")
    }

    func test__country_identifier_for_USOutlyingIslands() {
        country = .USOutlyingIslands
        XCTAssertEqual(country.countryIdentifier, "UM")
    }

    func test__country_identifier_for_Seychelles() {
        country = .Seychelles
        XCTAssertEqual(country.countryIdentifier, "SC")
    }

    func test__country_identifier_for_CaymanIslands() {
        country = .CaymanIslands
        XCTAssertEqual(country.countryIdentifier, "KY")
    }

    func test__country_identifier_for_Finland() {
        country = .Finland
        XCTAssertEqual(country.countryIdentifier, "FI")
    }

    func test__country_identifier_for_AntiguaBarbuda() {
        country = .AntiguaBarbuda
        XCTAssertEqual(country.countryIdentifier, "AG")
    }

    func test__country_identifier_for_Anguilla() {
        country = .Anguilla
        XCTAssertEqual(country.countryIdentifier, "AI")
    }

    func test__country_identifier_for_Mauritius() {
        country = .Mauritius
        XCTAssertEqual(country.countryIdentifier, "MU")
    }

    func test__country_identifier_for_Tonga() {
        country = .Tonga
        XCTAssertEqual(country.countryIdentifier, "TO")
    }

    func test__country_identifier_for_Italy() {
        country = .Italy
        XCTAssertEqual(country.countryIdentifier, "IT")
    }

    func test__country_identifier_for_Nigeria() {
        country = .Nigeria
        XCTAssertEqual(country.countryIdentifier, "NG")
    }

    func test__country_identifier_for_Australia() {
        country = .Australia
        XCTAssertEqual(country.countryIdentifier, "AU")
    }

    func test__country_identifier_for_SierraLeone() {
        country = .SierraLeone
        XCTAssertEqual(country.countryIdentifier, "SL")
    }

    func test__country_identifier_for_BritishVirginIslands() {
        country = .BritishVirginIslands
        XCTAssertEqual(country.countryIdentifier, "VG")
    }

    func test__country_identifier_for_Guernsey() {
        country = .Guernsey
        XCTAssertEqual(country.countryIdentifier, "GG")
    }

    func test__country_identifier_for_SouthSudan() {
        country = .SouthSudan
        XCTAssertEqual(country.countryIdentifier, "SS")
    }

    func test__country_identifier_for_Denmark() {
        country = .Denmark
        XCTAssertEqual(country.countryIdentifier, "DK")
    }

    func test__country_identifier_for_Guam() {
        country = .Guam
        XCTAssertEqual(country.countryIdentifier, "GU")
    }

    func test__country_identifier_for_Andorra() {
        country = .Andorra
        XCTAssertEqual(country.countryIdentifier, "AD")
    }

    func test__country_identifier_for_Cyprus() {
        country = .Cyprus
        XCTAssertEqual(country.countryIdentifier, "CY")
    }

    func test__country_identifier_for_StVincentGrenadines() {
        country = .StVincentGrenadines
        XCTAssertEqual(country.countryIdentifier, "VC")
    }

    func test__country_identifier_for_UnitedStates() {
        country = .UnitedStates
        XCTAssertEqual(country.countryIdentifier, "US")
    }

    func test__country_identifier_for_Liberia() {
        country = .Liberia
        XCTAssertEqual(country.countryIdentifier, "LR")
    }

    func test__country_identifier_for_Uganda() {
        country = .Uganda
        XCTAssertEqual(country.countryIdentifier, "UG")
    }

    func test__country_identifier_for_Slovakia() {
        country = .Slovakia
        XCTAssertEqual(country.countryIdentifier, "SK")
    }

    func test__country_identifier_for_Bermuda() {
        country = .Bermuda
        XCTAssertEqual(country.countryIdentifier, "BM")
    }

    func test__country_identifier_for_PitcairnIslands() {
        country = .PitcairnIslands
        XCTAssertEqual(country.countryIdentifier, "PN")
    }

    func test__country_identifier_for_Slovenia() {
        country = .Slovenia
        XCTAssertEqual(country.countryIdentifier, "SI")
    }

    func test__country_identifier_for_Switzerland() {
        country = .Switzerland
        XCTAssertEqual(country.countryIdentifier, "CH")
    }

    func test__country_identifier_for_Lithuania() {
        country = .Lithuania
        XCTAssertEqual(country.countryIdentifier, "LT")
    }

    func test__country_identifier_for_Tuvalu() {
        country = .Tuvalu
        XCTAssertEqual(country.countryIdentifier, "TV")
    }

    func test__country_identifier_for_World() {
        country = .World
        XCTAssertEqual(country.countryIdentifier, "001")
    }

    func test__country_identifier_for_TurksCaicosIslands() {
        country = .TurksCaicosIslands
        XCTAssertEqual(country.countryIdentifier, "TC")
    }

    func test__country_identifier_for_Vanuatu() {
        country = .Vanuatu
        XCTAssertEqual(country.countryIdentifier, "VU")
    }

    func test__country_identifier_for_NewZealand() {
        country = .NewZealand
        XCTAssertEqual(country.countryIdentifier, "NZ")
    }

    func test__country_identifier_for_Latvia() {
        country = .Latvia
        XCTAssertEqual(country.countryIdentifier, "LV")
    }

    func test__country_identifier_for_Ireland() {
        country = .Ireland
        XCTAssertEqual(country.countryIdentifier, "IE")
    }

    func test__country_identifier_for_Guyana() {
        country = .Guyana
        XCTAssertEqual(country.countryIdentifier, "GY")
    }

    func test__country_identifier_for_BritishIndianOceanTerritory() {
        country = .BritishIndianOceanTerritory
        XCTAssertEqual(country.countryIdentifier, "IO")
    }

    func test__country_identifier_for_Philippines() {
        country = .Philippines
        XCTAssertEqual(country.countryIdentifier, "PH")
    }

    func test__country_identifier_for_Niue() {
        country = .Niue
        XCTAssertEqual(country.countryIdentifier, "NU")
    }

    func test__country_identifier_for_Gambia() {
        country = .Gambia
        XCTAssertEqual(country.countryIdentifier, "GM")
    }

    func test__country_identifier_for_Spain() {
        country = .Spain
        XCTAssertEqual(country.countryIdentifier, "ES")
    }

    func test__country_identifier_for_NorthernMarianaIslands() {
        country = .NorthernMarianaIslands
        XCTAssertEqual(country.countryIdentifier, "MP")
    }

    func test__country_identifier_for_Estonia() {
        country = .Estonia
        XCTAssertEqual(country.countryIdentifier, "EE")
    }

    func test__country_identifier_for_Greece() {
        country = .Greece
        XCTAssertEqual(country.countryIdentifier, "GR")
    }

    func test__country_identifier_for_Canada() {
        country = .Canada
        XCTAssertEqual(country.countryIdentifier, "CA")
    }

    func test__country_identifier_for_Sudan() {
        country = .Sudan
        XCTAssertEqual(country.countryIdentifier, "SD")
    }

    func test__country_identifier_for_StLucia() {
        country = .StLucia
        XCTAssertEqual(country.countryIdentifier, "LC")
    }

    func test__country_identifier_for_Croatia() {
        country = .Croatia
        XCTAssertEqual(country.countryIdentifier, "HR")
    }

    func test__country_identifier_for_NorfolkIsland() {
        country = .NorfolkIsland
        XCTAssertEqual(country.countryIdentifier, "NF")
    }

    func test__country_identifier_for_UnitedKingdom() {
        country = .UnitedKingdom
        XCTAssertEqual(country.countryIdentifier, "GB")
    }

    func test__country_identifier_for_Dominica() {
        country = .Dominica
        XCTAssertEqual(country.countryIdentifier, "DM")
    }

    func test__country_identifier_for_Europe() {
        country = .Europe
        XCTAssertEqual(country.countryIdentifier, "150")
    }

    func test__country_identifier_for_Portugal() {
        country = .Portugal
        XCTAssertEqual(country.countryIdentifier, "PT")
    }

    func test__country_identifier_for_Turkey() {
        country = .Turkey
        XCTAssertEqual(country.countryIdentifier, "TR")
    }

    func test__country_identifier_for_Malta() {
        country = .Malta
        XCTAssertEqual(country.countryIdentifier, "MT")
    }

    func test__country_identifier_for_Albania() {
        country = .Albania
        XCTAssertEqual(country.countryIdentifier, "AL")
    }

    func test__country_identifier_for_TrinidadTobago() {
        country = .TrinidadTobago
        XCTAssertEqual(country.countryIdentifier, "TT")
    }

    func test__country_identifier_for_Samoa() {
        country = .Samoa
        XCTAssertEqual(country.countryIdentifier, "WS")
    }

    func test__country_identifier_for_Israel() {
        country = .Israel
        XCTAssertEqual(country.countryIdentifier, "IL")
    }

    func test__country_identifier_for_DiegoGarcia() {
        country = .DiegoGarcia
        XCTAssertEqual(country.countryIdentifier, "DG")
    }

    func test__country_identifier_for_Rwanda() {
        country = .Rwanda
        XCTAssertEqual(country.countryIdentifier, "RW")
    }

    func test__country_identifier_for_Fiji() {
        country = .Fiji
        XCTAssertEqual(country.countryIdentifier, "FJ")
    }

    func test__country_identifier_for_Kenya() {
        country = .Kenya
        XCTAssertEqual(country.countryIdentifier, "KE")
    }

    func test__country_identifier_for_Russia() {
        country = .Russia
        XCTAssertEqual(country.countryIdentifier, "RU")
    }

    func test__country_identifier_for_Bahamas() {
        country = .Bahamas
        XCTAssertEqual(country.countryIdentifier, "BS")
    }

    func test__country_identifier_for_Luxembourg() {
        country = .Luxembourg
        XCTAssertEqual(country.countryIdentifier, "LU")
    }

    func test__country_identifier_for_Hungary() {
        country = .Hungary
        XCTAssertEqual(country.countryIdentifier, "HU")
    }

    func test__country_identifier_for_Tanzania() {
        country = .Tanzania
        XCTAssertEqual(country.countryIdentifier, "TZ")
    }

    func test__country_identifier_for_Namibia() {
        country = .Namibia
        XCTAssertEqual(country.countryIdentifier, "NA")
    }

    func test__country_identifier_for_Zimbabwe() {
        country = .Zimbabwe
        XCTAssertEqual(country.countryIdentifier, "ZW")
    }

    func test__country_identifier_for_SouthAfrica() {
        country = .SouthAfrica
        XCTAssertEqual(country.countryIdentifier, "ZA")
    }

    func test__country_identifier_for_Grenada() {
        country = .Grenada
        XCTAssertEqual(country.countryIdentifier, "GD")
    }

    func test__country_identifier_for_Belize() {
        country = .Belize
        XCTAssertEqual(country.countryIdentifier, "BZ")
    }

    func test__country_identifier_for_Botswana() {
        country = .Botswana
        XCTAssertEqual(country.countryIdentifier, "BW")
    }

    func test__country_identifier_for_PuertoRico() {
        country = .PuertoRico
        XCTAssertEqual(country.countryIdentifier, "PR")
    }

    func test__country_identifier_for_USVirginIslands() {
        country = .USVirginIslands
        XCTAssertEqual(country.countryIdentifier, "VI")
    }

    func test__country_identifier_for_Sweden() {
        country = .Sweden
        XCTAssertEqual(country.countryIdentifier, "SE")
    }

    func test__country_identifier_for_FalklandIslands() {
        country = .FalklandIslands
        XCTAssertEqual(country.countryIdentifier, "FK")
    }

    func test__country_identifier_for_CocosKeelingIslands() {
        country = .CocosKeelingIslands
        XCTAssertEqual(country.countryIdentifier, "CC")
    }

    func test__country_identifier_for_France() {
        country = .France
        XCTAssertEqual(country.countryIdentifier, "FR")
    }

    func test__country_identifier_for_StKittsNevis() {
        country = .StKittsNevis
        XCTAssertEqual(country.countryIdentifier, "KN")
    }

    func test__country_identifier_for_Pakistan() {
        country = .Pakistan
        XCTAssertEqual(country.countryIdentifier, "PK")
    }

    func test__country_identifier_for_Zambia() {
        country = .Zambia
        XCTAssertEqual(country.countryIdentifier, "ZM")
    }

    func test__country_identifier_for_Poland() {
        country = .Poland
        XCTAssertEqual(country.countryIdentifier, "PL")
    }

    func test__country_identifier_for_Tokelau() {
        country = .Tokelau
        XCTAssertEqual(country.countryIdentifier, "TK")
    }

    func test__country_identifier_for_CookIslands() {
        country = .CookIslands
        XCTAssertEqual(country.countryIdentifier, "CK")
    }

    func test__country_identifier_for_StHelena() {
        country = .StHelena
        XCTAssertEqual(country.countryIdentifier, "SH")
    }

    func test__country_identifier_for_Nauru() {
        country = .Nauru
        XCTAssertEqual(country.countryIdentifier, "NR")
    }

    func test__country_identifier_for_Ghana() {
        country = .Ghana
        XCTAssertEqual(country.countryIdentifier, "GH")
    }

    func test__country_identifier_for_Iceland() {
        country = .Iceland
        XCTAssertEqual(country.countryIdentifier, "IS")
    }

    func test__country_identifier_for_Micronesia() {
        country = .Micronesia
        XCTAssertEqual(country.countryIdentifier, "FM")
    }

    func test__country_identifier_for_AmericanSamoa() {
        country = .AmericanSamoa
        XCTAssertEqual(country.countryIdentifier, "AS")
    }

    func test__country_identifier_for_India() {
        country = .India
        XCTAssertEqual(country.countryIdentifier, "IN")
    }
}

class EweSpeakingCountryTests: XCTestCase {

    var country: EweSpeakingCountry!

    func test__country_identifier_for_Togo() {
        country = .Togo
        XCTAssertEqual(country.countryIdentifier, "TG")
    }

    func test__country_identifier_for_Ghana() {
        country = .Ghana
        XCTAssertEqual(country.countryIdentifier, "GH")
    }
}

class FrenchSpeakingCountryTests: XCTestCase {

    var country: FrenchSpeakingCountry!

    func test__country_identifier_for_Rwanda() {
        country = .Rwanda
        XCTAssertEqual(country.countryIdentifier, "RW")
    }

    func test__country_identifier_for_Seychelles() {
        country = .Seychelles
        XCTAssertEqual(country.countryIdentifier, "SC")
    }

    func test__country_identifier_for_Vanuatu() {
        country = .Vanuatu
        XCTAssertEqual(country.countryIdentifier, "VU")
    }

    func test__country_identifier_for_Mauritius() {
        country = .Mauritius
        XCTAssertEqual(country.countryIdentifier, "MU")
    }

    func test__country_identifier_for_Chad() {
        country = .Chad
        XCTAssertEqual(country.countryIdentifier, "TD")
    }

    func test__country_identifier_for_Djibouti() {
        country = .Djibouti
        XCTAssertEqual(country.countryIdentifier, "DJ")
    }

    func test__country_identifier_for_CongoBrazzaville() {
        country = .CongoBrazzaville
        XCTAssertEqual(country.countryIdentifier, "CG")
    }

    func test__country_identifier_for_Monaco() {
        country = .Monaco
        XCTAssertEqual(country.countryIdentifier, "MC")
    }

    func test__country_identifier_for_Mauritania() {
        country = .Mauritania
        XCTAssertEqual(country.countryIdentifier, "MR")
    }

    func test__country_identifier_for_Luxembourg() {
        country = .Luxembourg
        XCTAssertEqual(country.countryIdentifier, "LU")
    }

    func test__country_identifier_for_Niger() {
        country = .Niger
        XCTAssertEqual(country.countryIdentifier, "NE")
    }

    func test__country_identifier_for_StMartin() {
        country = .StMartin
        XCTAssertEqual(country.countryIdentifier, "MF")
    }

    func test__country_identifier_for_Mayotte() {
        country = .Mayotte
        XCTAssertEqual(country.countryIdentifier, "YT")
    }

    func test__country_identifier_for_Benin() {
        country = .Benin
        XCTAssertEqual(country.countryIdentifier, "BJ")
    }

    func test__country_identifier_for_Canada() {
        country = .Canada
        XCTAssertEqual(country.countryIdentifier, "CA")
    }

    func test__country_identifier_for_FrenchGuiana() {
        country = .FrenchGuiana
        XCTAssertEqual(country.countryIdentifier, "GF")
    }

    func test__country_identifier_for_NewCaledonia() {
        country = .NewCaledonia
        XCTAssertEqual(country.countryIdentifier, "NC")
    }

    func test__country_identifier_for_Haiti() {
        country = .Haiti
        XCTAssertEqual(country.countryIdentifier, "HT")
    }

    func test__country_identifier_for_Senegal() {
        country = .Senegal
        XCTAssertEqual(country.countryIdentifier, "SN")
    }

    func test__country_identifier_for_CentralAfricanRepublic() {
        country = .CentralAfricanRepublic
        XCTAssertEqual(country.countryIdentifier, "CF")
    }

    func test__country_identifier_for_France() {
        country = .France
        XCTAssertEqual(country.countryIdentifier, "FR")
    }

    func test__country_identifier_for_Belgium() {
        country = .Belgium
        XCTAssertEqual(country.countryIdentifier, "BE")
    }

    func test__country_identifier_for_StPierreMiquelon() {
        country = .StPierreMiquelon
        XCTAssertEqual(country.countryIdentifier, "PM")
    }

    func test__country_identifier_for_Togo() {
        country = .Togo
        XCTAssertEqual(country.countryIdentifier, "TG")
    }

    func test__country_identifier_for_FrenchPolynesia() {
        country = .FrenchPolynesia
        XCTAssertEqual(country.countryIdentifier, "PF")
    }

    func test__country_identifier_for_Morocco() {
        country = .Morocco
        XCTAssertEqual(country.countryIdentifier, "MA")
    }

    func test__country_identifier_for_Cameroon() {
        country = .Cameroon
        XCTAssertEqual(country.countryIdentifier, "CM")
    }

    func test__country_identifier_for_Burundi() {
        country = .Burundi
        XCTAssertEqual(country.countryIdentifier, "BI")
    }

    func test__country_identifier_for_StBarthélemy() {
        country = .StBarthélemy
        XCTAssertEqual(country.countryIdentifier, "BL")
    }

    func test__country_identifier_for_Madagascar() {
        country = .Madagascar
        XCTAssertEqual(country.countryIdentifier, "MG")
    }

    func test__country_identifier_for_Algeria() {
        country = .Algeria
        XCTAssertEqual(country.countryIdentifier, "DZ")
    }

    func test__country_identifier_for_Guinea() {
        country = .Guinea
        XCTAssertEqual(country.countryIdentifier, "GN")
    }

    func test__country_identifier_for_BurkinaFaso() {
        country = .BurkinaFaso
        XCTAssertEqual(country.countryIdentifier, "BF")
    }

    func test__country_identifier_for_Guadeloupe() {
        country = .Guadeloupe
        XCTAssertEqual(country.countryIdentifier, "GP")
    }

    func test__country_identifier_for_CongoKinshasa() {
        country = .CongoKinshasa
        XCTAssertEqual(country.countryIdentifier, "CD")
    }

    func test__country_identifier_for_Réunion() {
        country = .Réunion
        XCTAssertEqual(country.countryIdentifier, "RE")
    }

    func test__country_identifier_for_Mali() {
        country = .Mali
        XCTAssertEqual(country.countryIdentifier, "ML")
    }

    func test__country_identifier_for_Martinique() {
        country = .Martinique
        XCTAssertEqual(country.countryIdentifier, "MQ")
    }

    func test__country_identifier_for_WallisFutuna() {
        country = .WallisFutuna
        XCTAssertEqual(country.countryIdentifier, "WF")
    }

    func test__country_identifier_for_EquatorialGuinea() {
        country = .EquatorialGuinea
        XCTAssertEqual(country.countryIdentifier, "GQ")
    }

    func test__country_identifier_for_Switzerland() {
        country = .Switzerland
        XCTAssertEqual(country.countryIdentifier, "CH")
    }

    func test__country_identifier_for_CôteDivoire() {
        country = .CôteDivoire
        XCTAssertEqual(country.countryIdentifier, "CI")
    }

    func test__country_identifier_for_Comoros() {
        country = .Comoros
        XCTAssertEqual(country.countryIdentifier, "KM")
    }

    func test__country_identifier_for_Syria() {
        country = .Syria
        XCTAssertEqual(country.countryIdentifier, "SY")
    }

    func test__country_identifier_for_Gabon() {
        country = .Gabon
        XCTAssertEqual(country.countryIdentifier, "GA")
    }

    func test__country_identifier_for_Tunisia() {
        country = .Tunisia
        XCTAssertEqual(country.countryIdentifier, "TN")
    }
}

class FulahSpeakingCountryTests: XCTestCase {

    var country: FulahSpeakingCountry!

    func test__country_identifier_for_Senegal() {
        country = .Senegal
        XCTAssertEqual(country.countryIdentifier, "SN")
    }

    func test__country_identifier_for_Cameroon() {
        country = .Cameroon
        XCTAssertEqual(country.countryIdentifier, "CM")
    }

    func test__country_identifier_for_Mauritania() {
        country = .Mauritania
        XCTAssertEqual(country.countryIdentifier, "MR")
    }

    func test__country_identifier_for_Guinea() {
        country = .Guinea
        XCTAssertEqual(country.countryIdentifier, "GN")
    }
}

class GermanSpeakingCountryTests: XCTestCase {

    var country: GermanSpeakingCountry!

    func test__country_identifier_for_Belgium() {
        country = .Belgium
        XCTAssertEqual(country.countryIdentifier, "BE")
    }

    func test__country_identifier_for_Austria() {
        country = .Austria
        XCTAssertEqual(country.countryIdentifier, "AT")
    }

    func test__country_identifier_for_Liechtenstein() {
        country = .Liechtenstein
        XCTAssertEqual(country.countryIdentifier, "LI")
    }

    func test__country_identifier_for_Luxembourg() {
        country = .Luxembourg
        XCTAssertEqual(country.countryIdentifier, "LU")
    }

    func test__country_identifier_for_Switzerland() {
        country = .Switzerland
        XCTAssertEqual(country.countryIdentifier, "CH")
    }

    func test__country_identifier_for_Germany() {
        country = .Germany
        XCTAssertEqual(country.countryIdentifier, "DE")
    }
}

class GreekSpeakingCountryTests: XCTestCase {

    var country: GreekSpeakingCountry!

    func test__country_identifier_for_Cyprus() {
        country = .Cyprus
        XCTAssertEqual(country.countryIdentifier, "CY")
    }

    func test__country_identifier_for_Greece() {
        country = .Greece
        XCTAssertEqual(country.countryIdentifier, "GR")
    }
}

class HausaSpeakingCountryTests: XCTestCase {

    var country: HausaSpeakingCountry!

    func test__country_identifier_for_Niger() {
        country = .Niger
        XCTAssertEqual(country.countryIdentifier, "NE")
    }

    func test__country_identifier_for_Ghana() {
        country = .Ghana
        XCTAssertEqual(country.countryIdentifier, "GH")
    }

    func test__country_identifier_for_Nigeria() {
        country = .Nigeria
        XCTAssertEqual(country.countryIdentifier, "NG")
    }
}

class ItalianSpeakingCountryTests: XCTestCase {

    var country: ItalianSpeakingCountry!

    func test__country_identifier_for_Italy() {
        country = .Italy
        XCTAssertEqual(country.countryIdentifier, "IT")
    }

    func test__country_identifier_for_Switzerland() {
        country = .Switzerland
        XCTAssertEqual(country.countryIdentifier, "CH")
    }

    func test__country_identifier_for_SanMarino() {
        country = .SanMarino
        XCTAssertEqual(country.countryIdentifier, "SM")
    }
}

class KoreanSpeakingCountryTests: XCTestCase {

    var country: KoreanSpeakingCountry!

    func test__country_identifier_for_NorthKorea() {
        country = .NorthKorea
        XCTAssertEqual(country.countryIdentifier, "KP")
    }

    func test__country_identifier_for_SouthKorea() {
        country = .SouthKorea
        XCTAssertEqual(country.countryIdentifier, "KR")
    }
}

class LingalaSpeakingCountryTests: XCTestCase {

    var country: LingalaSpeakingCountry!

    func test__country_identifier_for_CongoKinshasa() {
        country = .CongoKinshasa
        XCTAssertEqual(country.countryIdentifier, "CD")
    }

    func test__country_identifier_for_CentralAfricanRepublic() {
        country = .CentralAfricanRepublic
        XCTAssertEqual(country.countryIdentifier, "CF")
    }

    func test__country_identifier_for_Angola() {
        country = .Angola
        XCTAssertEqual(country.countryIdentifier, "AO")
    }

    func test__country_identifier_for_CongoBrazzaville() {
        country = .CongoBrazzaville
        XCTAssertEqual(country.countryIdentifier, "CG")
    }
}

class MalaySpeakingCountryTests: XCTestCase {

    var country: MalaySpeakingCountry!

    func test__country_identifier_for_Brunei() {
        country = .Brunei
        XCTAssertEqual(country.countryIdentifier, "BN")
    }

    func test__country_identifier_for_Malaysia() {
        country = .Malaysia
        XCTAssertEqual(country.countryIdentifier, "MY")
    }

    func test__country_identifier_for_Singapore() {
        country = .Singapore
        XCTAssertEqual(country.countryIdentifier, "SG")
    }
}

class MasaiSpeakingCountryTests: XCTestCase {

    var country: MasaiSpeakingCountry!

    func test__country_identifier_for_Tanzania() {
        country = .Tanzania
        XCTAssertEqual(country.countryIdentifier, "TZ")
    }

    func test__country_identifier_for_Kenya() {
        country = .Kenya
        XCTAssertEqual(country.countryIdentifier, "KE")
    }
}

class NepaliSpeakingCountryTests: XCTestCase {

    var country: NepaliSpeakingCountry!

    func test__country_identifier_for_Nepal() {
        country = .Nepal
        XCTAssertEqual(country.countryIdentifier, "NP")
    }

    func test__country_identifier_for_India() {
        country = .India
        XCTAssertEqual(country.countryIdentifier, "IN")
    }
}

class NorthernSamiSpeakingCountryTests: XCTestCase {

    var country: NorthernSamiSpeakingCountry!

    func test__country_identifier_for_Sweden() {
        country = .Sweden
        XCTAssertEqual(country.countryIdentifier, "SE")
    }

    func test__country_identifier_for_Norway() {
        country = .Norway
        XCTAssertEqual(country.countryIdentifier, "NO")
    }

    func test__country_identifier_for_Finland() {
        country = .Finland
        XCTAssertEqual(country.countryIdentifier, "FI")
    }
}

class NorwegianBokmålSpeakingCountryTests: XCTestCase {

    var country: NorwegianBokmålSpeakingCountry!

    func test__country_identifier_for_SvalbardJanMayen() {
        country = .SvalbardJanMayen
        XCTAssertEqual(country.countryIdentifier, "SJ")
    }

    func test__country_identifier_for_Norway() {
        country = .Norway
        XCTAssertEqual(country.countryIdentifier, "NO")
    }
}

class OromoSpeakingCountryTests: XCTestCase {

    var country: OromoSpeakingCountry!

    func test__country_identifier_for_Ethiopia() {
        country = .Ethiopia
        XCTAssertEqual(country.countryIdentifier, "ET")
    }

    func test__country_identifier_for_Kenya() {
        country = .Kenya
        XCTAssertEqual(country.countryIdentifier, "KE")
    }
}

class OsseticSpeakingCountryTests: XCTestCase {

    var country: OsseticSpeakingCountry!

    func test__country_identifier_for_Georgia() {
        country = .Georgia
        XCTAssertEqual(country.countryIdentifier, "GE")
    }

    func test__country_identifier_for_Russia() {
        country = .Russia
        XCTAssertEqual(country.countryIdentifier, "RU")
    }
}

class PersianSpeakingCountryTests: XCTestCase {

    var country: PersianSpeakingCountry!

    func test__country_identifier_for_Iran() {
        country = .Iran
        XCTAssertEqual(country.countryIdentifier, "IR")
    }

    func test__country_identifier_for_Afghanistan() {
        country = .Afghanistan
        XCTAssertEqual(country.countryIdentifier, "AF")
    }
}

class PortugueseSpeakingCountryTests: XCTestCase {

    var country: PortugueseSpeakingCountry!

    func test__country_identifier_for_Brazil() {
        country = .Brazil
        XCTAssertEqual(country.countryIdentifier, "BR")
    }

    func test__country_identifier_for_GuineaBissau() {
        country = .GuineaBissau
        XCTAssertEqual(country.countryIdentifier, "GW")
    }

    func test__country_identifier_for_TimorLeste() {
        country = .TimorLeste
        XCTAssertEqual(country.countryIdentifier, "TL")
    }

    func test__country_identifier_for_SãoToméPríncipe() {
        country = .SãoToméPríncipe
        XCTAssertEqual(country.countryIdentifier, "ST")
    }

    func test__country_identifier_for_Portugal() {
        country = .Portugal
        XCTAssertEqual(country.countryIdentifier, "PT")
    }

    func test__country_identifier_for_Angola() {
        country = .Angola
        XCTAssertEqual(country.countryIdentifier, "AO")
    }

    func test__country_identifier_for_MacauSarChina() {
        country = .MacauSarChina
        XCTAssertEqual(country.countryIdentifier, "MO")
    }

    func test__country_identifier_for_Mozambique() {
        country = .Mozambique
        XCTAssertEqual(country.countryIdentifier, "MZ")
    }

    func test__country_identifier_for_CapeVerde() {
        country = .CapeVerde
        XCTAssertEqual(country.countryIdentifier, "CV")
    }
}

class PunjabiSpeakingCountryTests: XCTestCase {

    var country: PunjabiSpeakingCountry!

    func test__country_identifier_for_Pakistan() {
        country = .Pakistan
        XCTAssertEqual(country.countryIdentifier, "PK")
    }

    func test__country_identifier_for_India() {
        country = .India
        XCTAssertEqual(country.countryIdentifier, "IN")
    }
}

class QuechuaSpeakingCountryTests: XCTestCase {

    var country: QuechuaSpeakingCountry!

    func test__country_identifier_for_Bolivia() {
        country = .Bolivia
        XCTAssertEqual(country.countryIdentifier, "BO")
    }

    func test__country_identifier_for_Ecuador() {
        country = .Ecuador
        XCTAssertEqual(country.countryIdentifier, "EC")
    }

    func test__country_identifier_for_Peru() {
        country = .Peru
        XCTAssertEqual(country.countryIdentifier, "PE")
    }
}

class RomanianSpeakingCountryTests: XCTestCase {

    var country: RomanianSpeakingCountry!

    func test__country_identifier_for_Romania() {
        country = .Romania
        XCTAssertEqual(country.countryIdentifier, "RO")
    }

    func test__country_identifier_for_Moldova() {
        country = .Moldova
        XCTAssertEqual(country.countryIdentifier, "MD")
    }
}

class RussianSpeakingCountryTests: XCTestCase {

    var country: RussianSpeakingCountry!

    func test__country_identifier_for_Kyrgyzstan() {
        country = .Kyrgyzstan
        XCTAssertEqual(country.countryIdentifier, "KG")
    }

    func test__country_identifier_for_Belarus() {
        country = .Belarus
        XCTAssertEqual(country.countryIdentifier, "BY")
    }

    func test__country_identifier_for_Russia() {
        country = .Russia
        XCTAssertEqual(country.countryIdentifier, "RU")
    }

    func test__country_identifier_for_Ukraine() {
        country = .Ukraine
        XCTAssertEqual(country.countryIdentifier, "UA")
    }

    func test__country_identifier_for_Moldova() {
        country = .Moldova
        XCTAssertEqual(country.countryIdentifier, "MD")
    }

    func test__country_identifier_for_Kazakhstan() {
        country = .Kazakhstan
        XCTAssertEqual(country.countryIdentifier, "KZ")
    }
}

class SerbianSpeakingCountryTests: XCTestCase {

    var country: SerbianSpeakingCountry!

    func test__country_identifier_for_Montenegro() {
        country = .Montenegro
        XCTAssertEqual(country.countryIdentifier, "ME")
    }

    func test__country_identifier_for_BosniaHerzegovina() {
        country = .BosniaHerzegovina
        XCTAssertEqual(country.countryIdentifier, "BA")
    }

    func test__country_identifier_for_Serbia() {
        country = .Serbia
        XCTAssertEqual(country.countryIdentifier, "RS")
    }

    func test__country_identifier_for_Kosovo() {
        country = .Kosovo
        XCTAssertEqual(country.countryIdentifier, "XK")
    }
}

class SomaliSpeakingCountryTests: XCTestCase {

    var country: SomaliSpeakingCountry!

    func test__country_identifier_for_Kenya() {
        country = .Kenya
        XCTAssertEqual(country.countryIdentifier, "KE")
    }

    func test__country_identifier_for_Somalia() {
        country = .Somalia
        XCTAssertEqual(country.countryIdentifier, "SO")
    }

    func test__country_identifier_for_Ethiopia() {
        country = .Ethiopia
        XCTAssertEqual(country.countryIdentifier, "ET")
    }

    func test__country_identifier_for_Djibouti() {
        country = .Djibouti
        XCTAssertEqual(country.countryIdentifier, "DJ")
    }
}

class SpanishSpeakingCountryTests: XCTestCase {

    var country: SpanishSpeakingCountry!

    func test__country_identifier_for_Bolivia() {
        country = .Bolivia
        XCTAssertEqual(country.countryIdentifier, "BO")
    }

    func test__country_identifier_for_Peru() {
        country = .Peru
        XCTAssertEqual(country.countryIdentifier, "PE")
    }

    func test__country_identifier_for_Panama() {
        country = .Panama
        XCTAssertEqual(country.countryIdentifier, "PA")
    }

    func test__country_identifier_for_Venezuela() {
        country = .Venezuela
        XCTAssertEqual(country.countryIdentifier, "VE")
    }

    func test__country_identifier_for_Philippines() {
        country = .Philippines
        XCTAssertEqual(country.countryIdentifier, "PH")
    }

    func test__country_identifier_for_Spain() {
        country = .Spain
        XCTAssertEqual(country.countryIdentifier, "ES")
    }

    func test__country_identifier_for_LatinAmerica() {
        country = .LatinAmerica
        XCTAssertEqual(country.countryIdentifier, "419")
    }

    func test__country_identifier_for_Paraguay() {
        country = .Paraguay
        XCTAssertEqual(country.countryIdentifier, "PY")
    }

    func test__country_identifier_for_Colombia() {
        country = .Colombia
        XCTAssertEqual(country.countryIdentifier, "CO")
    }

    func test__country_identifier_for_Nicaragua() {
        country = .Nicaragua
        XCTAssertEqual(country.countryIdentifier, "NI")
    }

    func test__country_identifier_for_Chile() {
        country = .Chile
        XCTAssertEqual(country.countryIdentifier, "CL")
    }

    func test__country_identifier_for_CanaryIslands() {
        country = .CanaryIslands
        XCTAssertEqual(country.countryIdentifier, "IC")
    }

    func test__country_identifier_for_PuertoRico() {
        country = .PuertoRico
        XCTAssertEqual(country.countryIdentifier, "PR")
    }

    func test__country_identifier_for_Honduras() {
        country = .Honduras
        XCTAssertEqual(country.countryIdentifier, "HN")
    }

    func test__country_identifier_for_Mexico() {
        country = .Mexico
        XCTAssertEqual(country.countryIdentifier, "MX")
    }

    func test__country_identifier_for_Uruguay() {
        country = .Uruguay
        XCTAssertEqual(country.countryIdentifier, "UY")
    }

    func test__country_identifier_for_CeutaMelilla() {
        country = .CeutaMelilla
        XCTAssertEqual(country.countryIdentifier, "EA")
    }

    func test__country_identifier_for_UnitedStates() {
        country = .UnitedStates
        XCTAssertEqual(country.countryIdentifier, "US")
    }

    func test__country_identifier_for_ElSalvador() {
        country = .ElSalvador
        XCTAssertEqual(country.countryIdentifier, "SV")
    }

    func test__country_identifier_for_Argentina() {
        country = .Argentina
        XCTAssertEqual(country.countryIdentifier, "AR")
    }

    func test__country_identifier_for_Ecuador() {
        country = .Ecuador
        XCTAssertEqual(country.countryIdentifier, "EC")
    }

    func test__country_identifier_for_EquatorialGuinea() {
        country = .EquatorialGuinea
        XCTAssertEqual(country.countryIdentifier, "GQ")
    }

    func test__country_identifier_for_Guatemala() {
        country = .Guatemala
        XCTAssertEqual(country.countryIdentifier, "GT")
    }

    func test__country_identifier_for_Cuba() {
        country = .Cuba
        XCTAssertEqual(country.countryIdentifier, "CU")
    }

    func test__country_identifier_for_DominicanRepublic() {
        country = .DominicanRepublic
        XCTAssertEqual(country.countryIdentifier, "DO")
    }

    func test__country_identifier_for_CostaRica() {
        country = .CostaRica
        XCTAssertEqual(country.countryIdentifier, "CR")
    }
}

class SwahiliSpeakingCountryTests: XCTestCase {

    var country: SwahiliSpeakingCountry!

    func test__country_identifier_for_CongoKinshasa() {
        country = .CongoKinshasa
        XCTAssertEqual(country.countryIdentifier, "CD")
    }

    func test__country_identifier_for_Tanzania() {
        country = .Tanzania
        XCTAssertEqual(country.countryIdentifier, "TZ")
    }

    func test__country_identifier_for_Kenya() {
        country = .Kenya
        XCTAssertEqual(country.countryIdentifier, "KE")
    }

    func test__country_identifier_for_Uganda() {
        country = .Uganda
        XCTAssertEqual(country.countryIdentifier, "UG")
    }
}

class SwedishSpeakingCountryTests: XCTestCase {

    var country: SwedishSpeakingCountry!

    func test__country_identifier_for_Sweden() {
        country = .Sweden
        XCTAssertEqual(country.countryIdentifier, "SE")
    }

    func test__country_identifier_for_ÅlandIslands() {
        country = .ÅlandIslands
        XCTAssertEqual(country.countryIdentifier, "AX")
    }

    func test__country_identifier_for_Finland() {
        country = .Finland
        XCTAssertEqual(country.countryIdentifier, "FI")
    }
}

class SwissGermanSpeakingCountryTests: XCTestCase {

    var country: SwissGermanSpeakingCountry!

    func test__country_identifier_for_Switzerland() {
        country = .Switzerland
        XCTAssertEqual(country.countryIdentifier, "CH")
    }

    func test__country_identifier_for_France() {
        country = .France
        XCTAssertEqual(country.countryIdentifier, "FR")
    }

    func test__country_identifier_for_Liechtenstein() {
        country = .Liechtenstein
        XCTAssertEqual(country.countryIdentifier, "LI")
    }
}

class TamilSpeakingCountryTests: XCTestCase {

    var country: TamilSpeakingCountry!

    func test__country_identifier_for_India() {
        country = .India
        XCTAssertEqual(country.countryIdentifier, "IN")
    }

    func test__country_identifier_for_Singapore() {
        country = .Singapore
        XCTAssertEqual(country.countryIdentifier, "SG")
    }

    func test__country_identifier_for_Malaysia() {
        country = .Malaysia
        XCTAssertEqual(country.countryIdentifier, "MY")
    }

    func test__country_identifier_for_SriLanka() {
        country = .SriLanka
        XCTAssertEqual(country.countryIdentifier, "LK")
    }
}

class TesoSpeakingCountryTests: XCTestCase {

    var country: TesoSpeakingCountry!

    func test__country_identifier_for_Kenya() {
        country = .Kenya
        XCTAssertEqual(country.countryIdentifier, "KE")
    }

    func test__country_identifier_for_Uganda() {
        country = .Uganda
        XCTAssertEqual(country.countryIdentifier, "UG")
    }
}

class TibetanSpeakingCountryTests: XCTestCase {

    var country: TibetanSpeakingCountry!

    func test__country_identifier_for_India() {
        country = .India
        XCTAssertEqual(country.countryIdentifier, "IN")
    }

    func test__country_identifier_for_China() {
        country = .China
        XCTAssertEqual(country.countryIdentifier, "CN")
    }
}

class TigrinyaSpeakingCountryTests: XCTestCase {

    var country: TigrinyaSpeakingCountry!

    func test__country_identifier_for_Ethiopia() {
        country = .Ethiopia
        XCTAssertEqual(country.countryIdentifier, "ET")
    }

    func test__country_identifier_for_Eritrea() {
        country = .Eritrea
        XCTAssertEqual(country.countryIdentifier, "ER")
    }
}

class TurkishSpeakingCountryTests: XCTestCase {

    var country: TurkishSpeakingCountry!

    func test__country_identifier_for_Cyprus() {
        country = .Cyprus
        XCTAssertEqual(country.countryIdentifier, "CY")
    }

    func test__country_identifier_for_Turkey() {
        country = .Turkey
        XCTAssertEqual(country.countryIdentifier, "TR")
    }
}

class UrduSpeakingCountryTests: XCTestCase {

    var country: UrduSpeakingCountry!

    func test__country_identifier_for_Pakistan() {
        country = .Pakistan
        XCTAssertEqual(country.countryIdentifier, "PK")
    }

    func test__country_identifier_for_India() {
        country = .India
        XCTAssertEqual(country.countryIdentifier, "IN")
    }
}

class UzbekSpeakingCountryTests: XCTestCase {

    var country: UzbekSpeakingCountry!

    func test__country_identifier_for_Uzbekistan() {
        country = .Uzbekistan
        XCTAssertEqual(country.countryIdentifier, "UZ")
    }

    func test__country_identifier_for_Afghanistan() {
        country = .Afghanistan
        XCTAssertEqual(country.countryIdentifier, "AF")
    }
}

class YorubaSpeakingCountryTests: XCTestCase {

    var country: YorubaSpeakingCountry!

    func test__country_identifier_for_Benin() {
        country = .Benin
        XCTAssertEqual(country.countryIdentifier, "BJ")
    }

    func test__country_identifier_for_Nigeria() {
        country = .Nigeria
        XCTAssertEqual(country.countryIdentifier, "NG")
    }
}
